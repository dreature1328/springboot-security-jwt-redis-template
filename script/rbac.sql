CREATE TABLE user (
  id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY COMMENT '用户ID',
  uuid CHAR(36) NOT NULL DEFAULT (UUID()) UNIQUE COMMENT '全局唯一标识',
  username VARCHAR(50) NOT NULL UNIQUE COMMENT '用户名',
  password_hash CHAR(60) NOT NULL COMMENT '密码哈希',
  email VARCHAR(255) DEFAULT NULL UNIQUE COMMENT '邮箱',
  phone VARCHAR(20) DEFAULT NULL UNIQUE COMMENT '手机号',
  nickname VARCHAR(50) DEFAULT NULL COMMENT '昵称',
  avatar_url VARCHAR(255) DEFAULT NULL COMMENT '头像URL',
  gender ENUM('M','F','O','U') NOT NULL DEFAULT 'U' COMMENT '性别：M-男,F-女,O-其他,U-未知',
  birth_date DATE DEFAULT NULL COMMENT '生日',
  status ENUM('ACTIVE','LOCKED','DISABLED','PENDING') NOT NULL DEFAULT 'PENDING' COMMENT '账户状态',
  last_login_at DATETIME DEFAULT NULL COMMENT '最后登录时间',
  created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='用户表';

-- 角色表
CREATE TABLE role (
  id SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY COMMENT '角色ID',
  code VARCHAR(20) NOT NULL UNIQUE COMMENT '角色代码(ROLE_前缀)',
  name VARCHAR(50) NOT NULL COMMENT '角色名称',
  is_system BOOLEAN NOT NULL DEFAULT false COMMENT '是否系统内置角色',
  created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='角色表';

-- 权限表
CREATE TABLE permission (
  id SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY COMMENT '权限ID',
  code VARCHAR(50) NOT NULL UNIQUE COMMENT '权限标识符',
  name VARCHAR(50) NOT NULL COMMENT '权限名称',
  category VARCHAR(20) NOT NULL DEFAULT 'SYSTEM' COMMENT '权限分类',
  created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='权限表';

-- 用户角色关联表
CREATE TABLE user_role (
  user_id BIGINT UNSIGNED NOT NULL COMMENT '用户ID',
  role_id SMALLINT UNSIGNED NOT NULL COMMENT '角色ID',
  granted_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '授权时间',
  PRIMARY KEY (user_id, role_id),
  FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE,
  FOREIGN KEY (role_id) REFERENCES role(id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='用户角色关联表';

-- 角色权限关联表
CREATE TABLE role_permission (
  role_id SMALLINT UNSIGNED NOT NULL COMMENT '角色ID',
  permission_id SMALLINT UNSIGNED NOT NULL COMMENT '权限ID',
  granted_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '授权时间',
  PRIMARY KEY (role_id, permission_id),
  FOREIGN KEY (role_id) REFERENCES role(id) ON DELETE CASCADE,
  FOREIGN KEY (permission_id) REFERENCES permission(id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='角色权限关联表';

-- 创建权限
INSERT INTO permission (code, name) VALUES
('CONTENT_CREATE', '创建内容'),
('CONTENT_EDIT', '编辑内容'),
('CONTENT_REVIEW', '审核内容'),
('CONTENT_PUBLISH', '发布内容');

-- 创建角色
INSERT INTO role (code, name) VALUES
('ROLE_AUTHOR', '作者'),
('ROLE_ADMIN', '管理员');

-- 为作者分配权限
INSERT INTO role_permission (role_id, permission_id)
SELECT r.id, p.id FROM role r, permission p
WHERE r.code = 'ROLE_AUTHOR'
AND p.code IN ('CONTENT_CREATE', 'CONTENT_EDIT');

-- 管理员获得所有权限
INSERT INTO role_permission (role_id, permission_id)
SELECT
  (SELECT id FROM role WHERE code='ROLE_ADMIN'),
  id
FROM permission;
